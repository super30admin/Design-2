// Time Complexity    : O(1) for all operations
// Space Complexity   : O(n)
// Did this code successfully run on Leetcode : Yes
// Any problem you faced while coding this    : No

class ImplementHashSet {
    boolean storage[][];
    // buckets and bucketItems initialized for double hashing technique, store item
    // in each bucketItem in a specific bucket according to the obtained hash value
    int buckets;
    int bucketItems;

    /** Initialize your data structure here. */
    public MyHashSet() {
        buckets = 1000;
        bucketItems = 1001; // to accomodate an extra value due to 0.
        // initializing the 2d storage array but keeping the 2nd dimension as empty so that
        // a new array can be created when we are inserting a value to save space. This will        // save us square root of the range's space.
        storage = new boolean[1000][];
    }

    // private method to hash the bucket to place the item in a particular bucket
    private int bucket(int key){
        return key % buckets;
    }

    // private method to place the item in a particular index in the specified "bucket"
    private int bucketItem(int key){
        return key / bucketItems;
    }

    public void add(int key) {
        int bucket = bucket(key);
        int bucketItem = bucketItem(key);

        if(storage[bucket] == null){
            storage[bucket] = new boolean[bucketItems];
        }
        storage[bucket][bucketItem] = true;

    }

    public void remove(int key) {
        int bucket = bucket(key);
        int bucketItem = bucketItem(key);

        if(storage[bucket] != null){
            storage[bucket][bucketItem] = false;
        }

    }

    /** Returns true if this set contains the specified element */
    public boolean contains(int key) {
        int bucket = bucket(key);
        int bucketItem = bucketItem(key);

        if(storage[bucket] != null){
            return storage[bucket][bucketItem];
        }
        return false;
    }
}

/**
 * Your MyHashSet object will be instantiated and called as such:
 * MyHashSet obj = new MyHashSet();
 * obj.add(key);
 * obj.remove(key);
 * boolean param_3 = obj.contains(key);
 */
