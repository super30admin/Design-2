class MyHashSet {
    
    private int initialBucket;
    private int nestedBucket;
    private boolean[][] storage;

    /** Initialize your data structure here. */
    public MyHashSet() {
        initialBucket=1000;
        nestedBucket=1000;
        storage=new boolean[initialBucket][];
        
    }
    
    public int getInitialBucketIndex(int key){
        return key % initialBucket;       
    }
    
    public int getNestedBucketIndex(int key){
        return key / nestedBucket;
    }
    
    public void add(int key) {
        int initialBucketIndex=getInitialBucketIndex(key);
        int nestedBucketIndex=getNestedBucketIndex(key);
        if(storage[initialBucketIndex]==null){
            storage[initialBucketIndex]= new boolean[nestedBucket];
        }
        storage[initialBucketIndex][nestedBucketIndex]=true;        
    }
    
    public void remove(int key) {
        int initialBucketIndex=getInitialBucketIndex(key);
        int nestedBucketIndex=getNestedBucketIndex(key);
        if(storage[initialBucketIndex]==null) return;
        storage[initialBucketIndex][nestedBucketIndex]=false;
        
    }
    
    /** Returns true if this set contains the specified element */
    public boolean contains(int key) {
        int initialBucketIndex=getInitialBucketIndex(key);
        int nestedBucketIndex=getNestedBucketIndex(key);
        if(storage[initialBucketIndex]==null) return false;
        return  storage[initialBucketIndex][nestedBucketIndex];
        
    }
}
