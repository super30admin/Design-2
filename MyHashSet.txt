class MyHashSet {
    
    boolean[][]storage;
    int buckets;
    int bucketitems;

    /** Initialize your data structure here. */
    
   
    
    public MyHashSet() {
        
        buckets = 1000;
        bucketitems = 1000;
        storage = new boolean[buckets][];
    }
    
    public int getbucketIndex(int key){
         return key % buckets;
    }
    
     public int getbucketitemsIndex(int key){
         return key / bucketitems;
    }
    
    public void add(int key) {
        
        int bucketsIndex = getbucketIndex(key);
        int bucketitemsIndex = getbucketitemsIndex(key);
        
        if(storage[bucketsIndex] == null){
            
            if(bucketsIndex == 0){
                storage[bucketsIndex] = new boolean[bucketitems + 1];
            }
            else{
                storage[bucketsIndex] = new boolean[bucketitems];
            }            
        }
        storage[bucketsIndex][bucketitemsIndex] = true;
    
    }
    
    public void remove(int key) {
        
        int bucketsIndex = getbucketIndex(key);
        int bucketitemsIndex = getbucketitemsIndex(key);
        
        if(storage[bucketsIndex] == null) return;
        
         storage[bucketsIndex][bucketitemsIndex] = false;
    }
    
    /** Returns true if this set contains the specified element */
    public boolean contains(int key) {
        
        int bucketsIndex = getbucketIndex(key);
        int bucketitemsIndex = getbucketitemsIndex(key);
        
        if(storage[bucketsIndex] == null) return false;
        
        return storage[bucketsIndex][bucketitemsIndex];
    }
}

/**
 * Your MyHashSet object will be instantiated and called as such:
 * MyHashSet obj = new MyHashSet();
 * obj.add(key);
 * obj.remove(key);
 * boolean param_3 = obj.contains(key);
 */