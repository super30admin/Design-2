class MyHashSet {
    boolean[][] storage;
    int bucket =1000;
    int bucketItem = 1000;
    
    public MyHashSet() {
        storage = new boolean[bucket][];
    }
    public int getBucket(int key){
         return key%1000;
    }
    public int getBucketItem(int key){
         return key/1000;
    }
    public void add(int key) {
        int bucketIndex = getBucket(key);
        int bucketItemIndex = getBucketItem(key);
        if(storage[bucketIndex] == null){
            if(bucketIndex ==0){
                storage[bucketIndex] = new boolean[bucketItem+1];
            }
            else{
                storage[bucketIndex] = new boolean[bucketItem];
            }
        }
        storage[bucketIndex][bucketItemIndex]= true;
        
    }
    
    public void remove(int key) {
        int bucketIndex = getBucket(key);
        int bucketItemIndex = getBucketItem(key);
        if(storage[bucketIndex] != null){
            storage[bucketIndex][bucketItemIndex] = false;
        }
    }
    
    public boolean contains(int key) {
        int bucketIndex = getBucket(key);
        int bucketItemIndex = getBucketItem(key);
        if(storage[bucketIndex] != null){
           return storage[bucketIndex][bucketItemIndex];
        }
        return false;
    }
}

/**
 * Your MyHashSet object will be instantiated and called as such:
 * MyHashSet obj = new MyHashSet();
 * obj.add(key);
 * obj.remove(key);
 * boolean param_3 = obj.contains(key);
 */
