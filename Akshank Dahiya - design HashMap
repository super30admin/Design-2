class MyHashMap {
    private class Node{
        int key,value;
        Node next;
        
        
        Node(int key,int value){
            this.key = key;
            this.value = value;
            this.next = null;
        } 
    }
    private static final int NUM_BUCKET = 10000;
    private Node[] arr;
    
    public MyHashMap() {
        arr = new Node[NUM_BUCKET];
    }
    private int getHash(int key){
        return key%NUM_BUCKET;
    }
    private Node findPrev(int key){
        int hash = getHash(key);
        if(arr[hash] == null){
            return null;
        }
        Node prev = arr[hash];  //dummy node
            Node curr = prev.next;
    
        while(curr != null && curr.key != key){
            prev = curr;
            curr = curr.next;
        }
        return prev;
    }
    
    public void put(int key, int value) {
        Node prev = findPrev(key);
        if(prev == null){
            int hash = getHash(key);
            arr[hash] = new Node(-1,-1);   //dummy
            prev = arr[hash];
        }
        if(prev.next!=null){
             prev.next.value = value;
        } else{
            prev.next = new Node(key,value);
        }
    }
    
    public int get(int key){
        Node prev = findPrev(key);
        if(prev == null || prev.next == null){
            return -1;
        }
        return prev.next.value;
    }
    
    public void remove(int key) {
        Node prev = findPrev(key);
        if(prev == null || prev.next == null){
            return;
    }
    prev.next = prev.next.next;
    }
}
