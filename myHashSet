class MyHashSet {

    int buckets;
    int bucketItems;
    boolean[][] storage;
    /** Initialize your data structure here. */
    public MyHashSet() {
        buckets = 1000;
        bucketItems = 1001;
        storage = new boolean[buckets][];
    }
    
    private int hash1(int key)
    {
        return key % 1000;
    }
    
    private int hash2(int key)
    {
        return key/1000;
    }
    
    public void add(int key) {
        int index1 = hash1(key);
        int index2 = hash2(key);
        
        if(storage[index1]==null)
        {
            storage[index1]= new boolean[bucketItems]; //for nested hashSet
            
        }
        storage[index1][index2] = true;
    }
    
    public void remove(int key) {
        int index1 = hash1(key);
        int index2 = hash2(key);
        if(storage[index1]==null)
        return;
            storage[index1][index2]=false;
        
    }
    
    /** Returns true if this set contains the specified element */
    public boolean contains(int key) {
        int index1 = hash1(key);
        int index2 = hash2(key);
        
        if(storage[index1]==null)
            return false;
        return storage[index1][index2];
            
         
        
    }
}

/**
 * Your MyHashSet object will be instantiated and called as such:
 * MyHashSet obj = new MyHashSet();
 * obj.add(key);
 * obj.remove(key);
 * boolean param_3 = obj.contains(key);
 */