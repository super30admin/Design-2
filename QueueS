// Time Complexity : O(n)
// Space Complexity : O(1)
// Did this code successfully run on Leetcode : Yes
// Any problem you faced while coding this : No


// Your code here along with comments explaining your approach

import java.util.*; 

	
public class QueueS {

	    /** Initialize your data structure here. */
	    Stack<Integer> s1 = new Stack<Integer>();
		Stack<Integer> s2 = new Stack<Integer>();
		
		public void push(int x)
		{
			while (!s2.isEmpty())
		        s1.push(s2.pop());
		      
		      s1.push(x);
			
		}
		
		public int pop()
		{
			while (!s1.isEmpty())
	        {
		        s2.push(s1.pop());
	        }
		    int x = s2.peek(); 
		    s2.pop();
	        return x;
		}
		
		public int peek()
		{
			while (!s1.isEmpty())
		        s2.push(s1.pop());
		      
		      return s2.peek();
		}
		
		public boolean empty() 
		{
			return s1.empty() && s2.empty();
	        
	    }
		
}
